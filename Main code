import pygame
from player2 import player
from ball import ball
from enemy import enemy

pygame.init()
pygame.display.set_caption("top-down game")
screen = pygame.display.set_mode((1000, 800))
clock = pygame.time.Clock()
gameover = False


p1 = player()
b1 = ball()
e1 = enemy(map, dir)
#e2 = enemy()

ticker = 0


#CONSTANTS
LEFT = 0
RIGHT = 1
UP = 2
DOWN = 3
SPACE = 4
W = 5

keys = [False, False, False, False, False]

mapNum = 1
#MAP 1______________________________________________________________________________________
map = [[5, 6, 2, 2, 2, 2, 2, 2, 2, 4],
       [5, 7, 7, 7, 7, 7, 7, 7, 7, 4],
       [5, 2, 2, 2, 2, 2, 2, 7, 7, 4],
       [5, 7, 7, 7, 7, 7, 7, 7, 7, 4],
       [5, 2, 2, 7, 7, 7, 7, 2, 2, 4],
       [5, 7, 7, 7, 7, 7, 7, 7, 7, 4],
       [5, 2, 2, 7, 7, 7, 7, 7, 7, 4],
       [5, 7, 7, 7, 7, 7, 7, 7, 7, 4],
       [5, 7, 2, 2, 2, 2, 2, 2, 2, 4],
       [5, 7, 7, 7, 7, 7, 7, 7, 7, 4],
       [0, 6, 3, 3, 3, 3, 3, 3, 3, 0],]
#MAP 2______________________________________________________________________________________
map2 = [[5, 6, 2, 2, 2, 2, 2, 2, 2, 4],
       [5, 7, 7, 7, 7, 7, 7, 7, 7, 4],
       [5, 2, 2, 7, 7, 2, 2, 2, 7, 4],
       [5, 7, 7, 7, 7, 7, 7, 7, 7, 4],
       [5, 2, 7, 7, 2, 2, 2, 2, 2, 4],
       [5, 7, 7, 7, 7, 7, 7, 7, 7, 4],
       [5, 7, 7, 2, 2, 7, 7, 7, 7, 4],
       [5, 7, 7, 7, 7, 7, 2, 2, 2, 4],
       [5, 7, 7, 7, 7, 7, 7, 7, 7, 4],
       [5, 7, 7, 7, 7, 7, 7, 7, 7, 4],
       [0, 6, 3, 3, 3, 3, 3, 3, 3, 0],]



wood = pygame.image.load('wood.png') # solid
wood2 = pygame.image.load('L wood.png') #solid
wood3 = pygame.image.load('R wood.png') #solid
wood4 = pygame.image.load('UP wood.png') #solid
wood5 = pygame.image.load('wood corner L.png') #solid
wood6 = pygame.image.load('wood corner R.png') #solid
floor = pygame.image.load('floorwood.png') #walkable
door = pygame.image.load('door.png') #interactable
dirt = pygame.image.load('dirt.png')


void = pygame.image.load('void.png') #solid, background



#GAMELOOP--------------------------------------------------
while not gameover:
    clock.tick(60)
    
    #input-------------------------------------------------
    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            gameover = True
        if event.type == pygame.KEYDOWN:
            if event.key == pygame.K_LEFT:
                keys[LEFT] = True
            elif event.key == pygame.K_RIGHT:
                keys[RIGHT] = True 
            elif event.key == pygame.K_UP:
                keys[UP] = True
            elif event.key == pygame.K_DOWN:
                keys[DOWN] = True
            elif event.key == pygame.K_SPACE:
                keys[SPACE] = True
                
        elif event.type == pygame.KEYUP:
            if event.key == pygame.K_LEFT:
                keys[LEFT] = False
            elif event.key == pygame.K_RIGHT:
                keys[RIGHT] = False 
            elif event.key == pygame.K_UP:
                keys[UP] = False
            elif event.key == pygame.K_DOWN:
                keys[DOWN] = False
            elif event.type == pygame.K_SPACE:
                keys[Space] = False
                
    #Physics-----------------------------------------------
    if mapNum == 1:
        p1.move(keys, map)
        #b1.move(keys, map)
        e1.move(map, ticker, p1.xpos, p1.ypos)
    elif mapNum == 2:
        p1.move(keys, map2)
        #b1.move(keys, map2)
    
    
    if keys[SPACE] == True:
        ball.shoot(p1.xpos, p1.direction)

    #teleport!
        
        #from map 1 to map2
    if mapNum == 1:
        if map[int((p1.ypos) / 50)][int ( (p1.xpos) / 50)] == 6:
            mapNum = 2
            p1.xpos = 50
            p1.ypos = 400
        
        #from map 2 to map1
    if mapNum == 2:
        if map2[int((p1.ypos) / 50)][int ( (p1.xpos) / 50)] == 6:
            mapNum = 1
            p1.xpos = 215
            p1.ypos = 245

    


    #Renders-----------------------------------------------
    
        
    screen.fill((0, 0, 0))
    
    #draw map-----------------------------------------------
    if mapNum == 1:
        for i in range(11): #Y axis for tiles
            for j in range(10): #X axis for tiles
                if map[i][j] == 1:
                    screen.blit(floor, (j * 50, i * 50),(0, 0, 50, 50))
                if map[i][j] == 2:
                    screen.blit(wood, (j * 50, i * 50),(0, 0, 50, 50))
                if map[i][j] == 4:
                    screen.blit(wood2, (j * 50, i * 50),(0, 0, 50, 50))
                if map[i][j] == 5:
                    screen.blit(wood3, (j * 50, i * 50),(0, 0, 50, 50))
                if map[i][j] == 3:
                    screen.blit(wood4, (j * 50, i * 50),(0, 0, 50, 50))
                if map[i][j] == 6:
                    screen.blit(door, (j * 50, i * 50),(0, 0, 50, 50))
                if map[i][j] == 7:
                    screen.blit(dirt, (j * 50, i * 50),(0, 0, 50, 50))
    elif mapNum == 2:
        for i in range(11): #Y axis for tiles
            for j in range(10): #X axis for tiles
                if map2[i][j] == 1:
                    screen.blit(floor, (j * 50, i * 50),(0, 0, 50, 50))
                if map2[i][j] == 2:
                    screen.blit(wood, (j * 50, i * 50),(0, 0, 50, 50))
                if map2[i][j] == 4:
                    screen.blit(wood2, (j * 50, i * 50),(0, 0, 50, 50))
                if map2[i][j] == 5:
                    screen.blit(wood3, (j * 50, i * 50),(0, 0, 50, 50))
                if map2[i][j] == 3:
                    screen.blit(wood4, (j * 50, i * 50),(0, 0, 50, 50))
                if map2[i][j] == 6:
                    screen.blit(door, (j * 50, i * 50),(0, 0, 50, 50))
                if map2[i][j] == 7:
                    screen.blit(dirt, (j * 50, i * 50),(0, 0, 50, 50))



    p1.draw(screen)
    
    #b1.draw(screen)
    e1.draw(screen)

    

    pygame.display.flip()
